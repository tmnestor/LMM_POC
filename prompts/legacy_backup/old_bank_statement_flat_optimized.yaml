prompts:
  bank_statement:
    name: Optimized Flat Bank Statement Extraction
    description: Optimized for simple flat bank statements with single transaction table
    prompt: |
      Extract bank account details and all transactions from this flat bank statement.

      ## PART 1: BANK ACCOUNT DETAILS
      Extract the following information from the statement header:

      BANK_NAME: [bank name (Commonwealth Bank, ANZ, etc.) or NOT_FOUND]
      BANK_BSB_NUMBER: [6-digit BSB number or NOT_FOUND]
      BANK_ACCOUNT_NUMBER: [account number or NOT_FOUND]
      BANK_ACCOUNT_HOLDER: [account holder name or NOT_FOUND]
      ACCOUNT_OPENING_BALANCE: [first balance shown in transaction table or NOT_FOUND]
      ACCOUNT_CLOSING_BALANCE: [final balance at end of statement or NOT_FOUND]
      STATEMENT_DATE_RANGE: [statement period (e.g., "03/05/2025 to 10/05/2025") or NOT_FOUND]

      ## PART 2: CORE EXTRACTION FIELDS
      These are the primary fields for evaluation:

      DOCUMENT_TYPE: STATEMENT

      LINE_ITEM_DESCRIPTIONS: [pipe-separated transaction descriptions - format: desc1 | desc2 | desc3]

      TRANSACTION_DATES: [pipe-separated dates in same order as descriptions - format: date1 | date2 | date3]

      CRITICAL ARRAY ALIGNMENT REQUIREMENT:
      ALL FIELDS MUST BE PERFECTLY ALIGNED BY DATE POSITION!

      ROW-BY-ROW PROCESSING METHODOLOGY:
      DO NOT scan columns! Process each transaction ROW individually:

      EXAMPLE: If you see these transactions in the bank statement:
      Row 1: 03/05/2025 | AMAZON PURCHASE | [DEBIT: $288.03] | [CREDIT: empty] | [BALANCE: $13387.44]
      Row 2: 04/05/2025 | SALARY DEPOSIT | [DEBIT: empty] | [CREDIT: $3497.47] | [BALANCE: $16884.91]
      Row 3: 05/05/2025 | ATM WITHDRAWAL | [DEBIT: $50.00] | [CREDIT: empty] | [BALANCE: $16834.91]

      CORRECT ROW-BY-ROW PROCESSING:
      1. Process Row 1 → Position [0]: Date=03/05/2025, Paid=$288.03, Received=NOT_FOUND, Balance=$13387.44
      2. Process Row 2 → Position [1]: Date=04/05/2025, Paid=NOT_FOUND, Received=$3497.47, Balance=$16884.91
      3. Process Row 3 → Position [2]: Date=05/05/2025, Paid=$50.00, Received=NOT_FOUND, Balance=$16834.91

      RESULTING ALIGNED ARRAYS:
      TRANSACTION_DATES: 03/05/2025 | 04/05/2025 | 05/05/2025
      TRANSACTION_AMOUNTS_PAID: $288.03 | NOT_FOUND | $50.00
      TRANSACTION_AMOUNTS_RECEIVED: NOT_FOUND | $3497.47 | NOT_FOUND
      ACCOUNT_BALANCE: $13387.44 | $16884.91 | $16834.91

      WRONG - COLUMN SCANNING (causes misalignment):
      - Scanning DEBIT column: "$288.03, $50.00" → puts in positions [0], [1]
      - Scanning CREDIT column: "$3497.47" → puts in position [0]
      - Results in: RECEIVED[0] = $3497.47 (WRONG! This belongs in position [1])

      CORRECT: ALWAYS process ROW-BY-ROW, never scan columns!

      ## MANDATORY ROW-BY-ROW EXTRACTION PROTOCOL:

      Step 1: Count total transaction rows in the table
      Step 2: For EACH row from top to bottom:
         - Extract the date → add to TRANSACTION_DATES at this position
         - Extract the description → add to LINE_ITEM_DESCRIPTIONS at this position
         - Look at DEBIT cell: if has amount → add to TRANSACTION_AMOUNTS_PAID, if empty → add "NOT_FOUND"
         - Look at CREDIT cell: if has amount → add to TRANSACTION_AMOUNTS_RECEIVED, if empty → add "NOT_FOUND"
         - Extract the balance → add to ACCOUNT_BALANCE at this position
      Step 3: Verify all arrays have same length as row count

      TRANSACTION_AMOUNTS_PAID: [pipe-separated DEBIT/WITHDRAWAL amounts - money OUT:
      - Extract amounts from WITHDRAWAL/DEBIT columns only
      - These are payments, withdrawals, fees, purchases (money leaving account)
      - CRITICAL: Position [0] must correspond to TRANSACTION_DATES[0], position [1] to TRANSACTION_DATES[1], etc.
      - If a transaction has NO debit amount, use NOT_FOUND in that exact position
      - Format: amount1 | NOT_FOUND | amount3 | NOT_FOUND (preserve date alignment)]

      TRANSACTION_AMOUNTS_RECEIVED: [pipe-separated CREDIT/DEPOSIT amounts - money IN:
      - Extract amounts from DEPOSIT/CREDIT columns only
      - These are deposits, salary, refunds, transfers in (money entering account)
      - CRITICAL: Position [0] must correspond to TRANSACTION_DATES[0], position [1] to TRANSACTION_DATES[1], etc.
      - If a transaction has NO credit amount, use NOT_FOUND in that exact position
      - Format: NOT_FOUND | amount2 | NOT_FOUND | amount4 (preserve date alignment)]

      ACCOUNT_BALANCE: [pipe-separated BALANCE amounts - running account balance:
      - Extract amounts from BALANCE columns for each transaction row
      - These show the account balance AFTER each transaction
      - CRITICAL: Position [0] must correspond to TRANSACTION_DATES[0], position [1] to TRANSACTION_DATES[1], etc.
      - Format: balance1 | balance2 | balance3 | balance4 (every transaction has a balance)]

      ## CRITICAL INSTRUCTIONS FOR FLAT STATEMENTS:

      UNDERSTANDING BANK STATEMENT COLUMNS:
      Each transaction row typically has these dollar amounts:
      - DEBIT/WITHDRAWAL column: Money OUT of account (use for TRANSACTION_AMOUNTS_PAID)
      - CREDIT/DEPOSIT column: Money IN to account (use for TRANSACTION_AMOUNTS_RECEIVED)
      - BALANCE column: Running account balance AFTER each transaction (use for ACCOUNT_BALANCE)

      CRITICAL BALANCE VALIDATION:
      The BALANCE column is the most reliable field (nearly 100% accuracy).
      Use balance direction to validate transaction classification:
      - If balance INCREASES → Money came IN (CREDIT/DEPOSIT) → TRANSACTION_AMOUNTS_RECEIVED
      - If balance DECREASES → Money went OUT (DEBIT/WITHDRAWAL) → TRANSACTION_AMOUNTS_PAID

      1. Column Recognition: Look at the actual column headers in the image:
         - Common patterns: "Date | Description | Withdrawal | Deposit | Balance"
         - Alternative patterns: "Date | Description | Debit | Credit | Balance"
         - Some have additional columns like "Transaction Type" or "Reference"

      2. Amount Classification - CRITICAL:
         - TRANSACTION_AMOUNTS_PAID: Extract from WITHDRAWAL/DEBIT columns (money out)
         - TRANSACTION_AMOUNTS_RECEIVED: Extract from DEPOSIT/CREDIT columns (money in)
         - ACCOUNT_BALANCE: Extract from BALANCE columns (running account total after transaction)
         - VALIDATION: Compare consecutive balance amounts to confirm transaction direction
         - CRITICAL: Each transaction row has ONLY a debit OR credit, never both

      3. Row Order: Process transactions in the order they appear in the table

      4. Date Format: Use dates exactly as shown in the Date column

      5. Pipe Separation: Ensure PAID, RECEIVED, and BALANCE lists have same number of entries as descriptions

      ## SPECIAL FOCUS: EARLIEST TRANSACTION EXTRACTION

      CRITICAL: PAY SPECIAL ATTENTION TO THE CHRONOLOGICALLY EARLIEST TRANSACTION
      Bank statements may be in chronological OR reverse chronological order:
      - Some banks show oldest first (chronological)
      - Some banks show newest first (reverse chronological)

      FOR THE EARLIEST (OLDEST) TRANSACTION IN THE STATEMENT:
      1. Identify which transaction has the EARLIEST/OLDEST date
      2. Carefully examine its DEBIT/CREDIT columns to determine transaction type
      3. Look for visual cues in the statement:
         - If amount appears in DEBIT/WITHDRAWAL column → TRANSACTION_AMOUNTS_PAID
         - If amount appears in CREDIT/DEPOSIT column → TRANSACTION_AMOUNTS_RECEIVED
         - If columns are empty, analyze the transaction description for keywords:
           * DEBIT indicators: "payment", "withdrawal", "debit", "fee", "purchase", "transfer out"
           * CREDIT indicators: "deposit", "credit", "salary", "refund", "transfer in", "payment received"
      4. Ensure this earliest transaction's amount is correctly placed in PAID or RECEIVED

      WHY THIS MATTERS:
      - Mathematical validation requires the earliest transaction to be accurately classified
      - We use balance differences for other transactions, but need the earliest one extracted
      - This enables complete mathematical reconstruction of all debits and credits

      CRITICAL OUTPUT FORMAT REQUIREMENTS:
      - Start your response immediately with "BANK_NAME:"
      - Do NOT include conversational text, explanations, or markdown formatting
      - Do NOT use bullet points, asterisks, or narrative descriptions
      - Output ONLY the structured field extraction data in this EXACT format:

      BANK_NAME: [Extract bank name from header]
      BANK_BSB_NUMBER: [Extract 6-digit BSB number]
      BANK_ACCOUNT_NUMBER: [Extract account number]
      BANK_ACCOUNT_HOLDER: [Extract account holder name]
      ACCOUNT_OPENING_BALANCE: [Extract opening balance]
      ACCOUNT_CLOSING_BALANCE: [Extract closing balance]
      STATEMENT_DATE_RANGE: [Extract statement period]
      DOCUMENT_TYPE: STATEMENT
      LINE_ITEM_DESCRIPTIONS: [transaction1 | transaction2 | transaction3]
      TRANSACTION_DATES: [date1 | date2 | date3]
      TRANSACTION_AMOUNTS_PAID: [debit1 | debit2 | NOT_FOUND]
      TRANSACTION_AMOUNTS_RECEIVED: [credit1 | NOT_FOUND | credit3]
      ACCOUNT_BALANCE: [balance1 | balance2 | balance3]

      IMPORTANT: End immediately after "ACCOUNT_BALANCE:" with no additional text.
